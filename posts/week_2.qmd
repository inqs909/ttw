---
title: "Tidy Tuesday on Wednesday"
subtitle: "www.inqs.info/ttw"
date: 02-14-24
description: Second week of Tidy Tuesday on Wednesday at CSUCI! Analyzing Valentines day sales.
format:
  revealjs:
    scrollable: true
    preview-links: true
    navigation-mode: vertical
    controls-layout: bottom-right
    controls-tutorial: true
    incremental: false 
    chalkboard:
      src: chalkboard.json
      storage: chalkboard_pres
      theme: whiteboard
      chalk-width: 4
engine: knitr
knitr:
  opts_chunk: 
    echo: true
    eval: false
    comment: "#>" 
draft: false
categories:
  - sp2024
image: img/post2.png
execute: 
  cache: true
---

# Tidy Tuesday

## Tidy Tuesday

Tidy Tuesday is a weekly data vizualization challenge from the [R 4 Data Science Online Community](https://github.com/rfordatascience/tidytuesday).

## Week 7

This week looks at the number of heritage sites in 3 countries from the [Unesco World Heritage Convention](https://whc.unesco.org/en/list).

::: fragment

This is part of the [100 visualizations from 1 data set](https://100.datavizproject.com/).

:::


## Loading Data

```{r}
#| echo: true
#| eval: true

tuesdata <- tidytuesdayR::tt_load(2024, week = 7)
historical <- tuesdata$historical_spending
```

## Historical Gifts

```{r}
#| eval: true
#| echo: true
historical |> DT::datatable(options = list(pageLength = 5, dom = "tp"))
```


## Examples

```{r}
#| label: ex1
#| code-fold: true
#| eval: true
#| fig-alt: |
#|    A line plot demonstrating the average percent on spending for different categories
#|    items by year for Valentine's Day. There is a transparent heart shape in
#|    the background. The categories are candy, clothing, evening out, flowers, 
#|    and jewelry. The plot shows an overall increase for all items, except in 2021
#|    where there was a noticeable dip. It picked up the following Year.
#|    The plot shows that Jewelry and Evening Outs had the highest percentage, 
#|    while Candy, Flowers, and Clothing were the lowest.

library(tidyverse)
historical_long <- historical |> 
    pivot_longer(cols = `PercentCelebrating`:`GiftCards`,
                 names_to  = "Variable", values_to = "Value") 

heartdf = tibble(
  t = seq(0, 2*pi, pi/60),
  x = (16*sin(t)^3)/3 + 2016,
  y = 13*cos(t) - 5*cos(2*t) - 2*cos(3*t) - cos(4*t) +30
)


p1 <- historical_long |> 
  filter(!Variable %in% c("PercentCelebrating", "PerPerson", "GreetingCards", "GiftCards")) |> 
  mutate(Variable = ifelse(Variable == "EveningOut", "Evening Out", Variable)) |> 
  ggplot(data = _) +
    geom_polygon(data = heartdf, aes(x, y, group = 1), fill = "red", alpha = 0.2) +
    geom_line(aes(x = Year, y =  Value, color = Variable)) +
    theme_bw() +
    ylab("Average Percent Spending") +
    xlab("Year") +
    theme(legend.title=element_blank()) +
    scale_x_continuous(breaks = c(2010, 2014, 2018, 2022))

p1
    
```




# Installation

## R Programming

R is a statistical programming package that allows you to conduct different types of analysis.

[R](https://www.r-project.org/)

## RStudio

A piece of software that organizes how you conduct statistical analysis in R.

[RStudio](https://posit.co/downloads/)

## Posit Cloud

A web version of RStudio.

[Posit Cloud](https://posit.cloud/login)

## R Packages

-   Tidyverse

-   plotly

-   ggthemes

-   esquisse

-   tidytuesdayR


## Load R Package

```{r}
#| echo: true
#| eval: true
#| message: false
#| warning: false

library(tidyverse)
library(plotly)
library(ggthemes)
library(esquisse)
library(tidytuesdayR)
```


- You must load packages every new R Session

## Visualization Resources

[R Graphics Cookbook](https://r-graphics.org/)

[R Graph Gallery](https://r-graph-gallery.com/)

[R Charts](https://r-charts.com/)

[ggplot2](https://ggplot2.tidyverse.org/)



# Graphing Examples

## Downloading Data Data

```{r}
#| echo: true
#| eval: false
u <- "https://www.inqs.info/p/plotathon/owenWilsonWows.csv"
basename(u)
download.file(u,
              file.path(getwd(), "data", basename(u)))

```

## Loading Data

```{r}
#| eval: false
mds <- read_csv("data/owenWilsonWows.csv")
```


## Base Plot

```{r}
mds |> ggplot(aes(x = total_wows_in_movie)) 
```

## Histogram

```{r}
mds |> ggplot(aes(x = total_wows_in_movie)) +
  geom_histogram()
```

## Box Plot

```{r}
mds |> ggplot(aes(x = total_wows_in_movie)) +
  geom_boxplot()
```

## Density Plot

```{r}
mds |> ggplot(aes(x = total_wows_in_movie)) +
  geom_density()
```

## Box Plot By Category

```{r}
mds |> ggplot(aes(x = total_wows_in_movie, y = era)) +
  geom_boxplot()
```

## Density Plot By Category

```{r}
mds |> ggplot(aes(x = total_wows_in_movie, color = era)) +
  geom_density()
```

## Scatter Plot

```{r}
mds |> ggplot(aes(x = durationInSeconds, 
                  y = total_wows_in_movie)) +
  geom_point()
```

## Scatter Plot by Group

```{r}
mds |> ggplot(aes(x = durationInSeconds, 
                  y = total_wows_in_movie, color = era)) +
  geom_point()
```

## Add Regression Line

```{r}
mds |> ggplot(aes(x = durationInSeconds, 
                  y = total_wows_in_movie)) +
  geom_point() +
  geom_smooth(method = "lm", se = F)
```

## Smooth Line

```{r}
mds |> ggplot(aes(x = durationInSeconds, 
                  y = total_wows_in_movie)) +
  geom_point() +
  geom_smooth(se = F)
```

## Regression Lines by Group

```{r}
mds |> ggplot(aes(x = durationInSeconds, 
                  y = total_wows_in_movie,
                  color = era)) +
  geom_point() +
  geom_smooth(method = "lm", se = F)
```
