---
title: "Tidy Tuesday on Wednesday"
subtitle: "www.inqs.info/ttw"
date: 02-27-24
description: Fourth week of Tidy Tuesday on Wednesday at CSUCI! Analyzing the Leap Day Data.
format:
  revealjs:
    scrollable: true
    navigation-mode: vertical
    controls-layout: bottom-right
    controls-tutorial: true
    incremental: false 
engine: knitr
knitr:
  opts_chunk: 
    echo: true
    eval: false
    comment: "#>" 
draft: false
categories:
  - sp2024
image: week_4/post1.png
execute: 
  cache: true
---

# Tidy Tuesday

## Tidy Tuesday

Tidy Tuesday is a weekly data visualization challenge from the [R 4 Data Science Online Community](https://github.com/rfordatascience/tidytuesday).

## Week 9


::: fragment
More information about the data can be found on [GitHub](https://github.com/rfordatascience/tidytuesday/blob/master/data/2024/2024-02-27/readme.md) and [Blog Post](https://www.r-consortium.org/blog/2024/02/08/r-consortium-infrastructure-steering-committee-isc-grant-program-accepting-proposals-starting-march-1st).
:::

::: fragment
Csv files:

[Events](https://github.com/rfordatascience/tidytuesday/blob/master/data/2024/2024-02-27/events.csv) | [Births](https://github.com/rfordatascience/tidytuesday/blob/master/data/2024/2024-02-27/births.csv) | [Deaths](https://github.com/rfordatascience/tidytuesday/blob/master/data/2024/2024-02-27/deaths.csv) 
:::


## Loading Data

```{r}
#| echo: true
#| eval: true

tuesdata <- tidytuesdayR::tt_load(2024, week = 9)
births <- tuesdata$births
deaths <- tuesdata$deaths
events <- tuesdata$events

```


## Data

```{r}
#| eval: true
#| echo: false
births |> DT::datatable(options = list(pageLength = 5, dom = "tp"))
deaths |> DT::datatable(options = list(pageLength = 5, dom = "tp"))
events |> DT::datatable(options = list(pageLength = 5, dom = "tp"))
```

## R Softare 


[R](https://www.r-project.org/): R is a statistical programming package that allows you to conduct different types of analysis.


[RStudio](https://posit.co/downloads/): A piece of software that organizes how you conduct statistical analysis in R.

[Posit Cloud](https://posit.cloud/login): A web version of RStudio.


## Recommended R Packages

```{r}
#| echo: true
#| eval: false

install.packages("tidyverse")
install.packages("plotly")
install.packages("ggwordcloud")
install.packages("ggthemes")
install.packages("ggpie")
install.packages("ggbump")
install.packages("tidytext")
install.packages("remotes")
install.packages("esquisse")
install.packages("tidytuesdayR")
remotes::install_github("MatthewBJane/ThemePark")

```

## Visualization Resources

[R Graphics Cookbook](https://r-graphics.org/)

[R Graph Gallery](https://r-graph-gallery.com/)

[R Charts](https://r-charts.com/)

[ggplot2](https://ggplot2.tidyverse.org/)


## Tidy Tuesday Community Examples

[poncest](https://github.com/poncest/tidytuesday/tree/main/2024/Week_09)

[project_presentations](https://github.com/Aditya-Dahiya/projects_presentations/blob/main/projects/tidy_leap_day.R)

[mvbloois](https://github.com/mvbloois/tidytuesday/tree/main/2024/2024-02-27)

# Example 1

## Cleaning Data

```{r}
#| label: ex_clean
#| echo: false
#| eval: true
#| fig-align: center


library(dtrackr)
library(tidyverse)
births <- births |> mutate(type = "Births") 
deaths <- deaths |> mutate(type = "Deaths")

births |> track(.messages = c("Start with Births and Deaths Data Set",
                              "A new variable was added to both data sets indicating type.")) |> 
  bind_rows(deaths) |>
  comment(.messages = c("Births and Deaths were aggregated to one table.",
                        "There are currently {.count} observations in the data set.")) |> 
  filter(!(is.na(year_birth) | is.na(year_death))) |> 
  comment(.messages = c("Removed any missing years in births or deaths.",
                        "There are currently {.count} observations in the data set.")) |> 
  flowchart()


```


```{r}
#| echo: true
#| eval: true

births <- births |> mutate(type = "Births")
deaths <- deaths |> mutate(type = "Deaths")

df <- births |> bind_rows(deaths) |> 
    filter(!(is.na(year_birth) | is.na(year_death))) |> 
    filter(year_birth > 1700) |>
    slice_sample(prop = 1) |>
    mutate(id = row_number()) 

```


## Cleaned Data

```{r}
#| echo: false
#| eval: true

df |> DT::datatable(options = list(pageLength = 5, dom = "tp"))
```


## Plot
```{r}
#| label: ex1
#| code-fold: true
#| eval: true
#| fig-alt: |
#|    The plot shows two separate word clouds demonstrating the words that most 
#|    common words in project titles in both Fall and Spring funding sessions. 
#|    The most common word in both Fall and Spring was data. Other common words 
#|    in Fall are dbi, api, and development. The most common word in Spring are 
#|    package, interactive and infrastructure.

library(tidyverse)


df |>  
  ggplot(aes(x=year_birth, xend = year_death, 
             y = id, yend = id, color = type)) +
    geom_segment() +
    xlab("Year") + ylab("") + 
    theme_bw() +
    scale_color_discrete(name = "")+
    theme(axis.text.y = element_blank(),
          axis.ticks.y = element_blank()) +
    ggtitle("Life Span for Births and Deaths") +
    labs(subtitle = "on Leap Day")



```

