{
  "hash": "3c13a0b37a79c749380d3623c9b3e4ff",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Tidy Tuesday on Wednesday\"\nsubtitle: \"www.inqs.info/ttw\"\ndate: 02-06-24\ndescription: First week of Tidy Tuesday on Wednesday at CSUCI! Visualizing data from Heritage Sites\nformat:\n  revealjs:\n    scrollable: true\n    preview-links: true\n    navigation-mode: vertical\n    controls-layout: bottom-right\n    controls-tutorial: true\n    incremental: false \n    chalkboard:\n      src: chalkboard.json\n      storage: chalkboard_pres\n      theme: whiteboard\n      chalk-width: 4\nengine: knitr\nknitr:\n  opts_chunk: \n    echo: true\n    eval: false\n    comment: \"#>\" \ndraft: false\ncategories:\n  - sp2024\nimage: img/post1.png\n---\n\n\n# Installation\n\n## R Programming\n\nR is a statistical programming package that allows you to conduct different types of analysis.\n\n[R](https://www.r-project.org/)\n\n## RStudio\n\nA piece of software that organizes how you conduct statistical analysis in R.\n\n[RStudio](https://posit.co/downloads/)\n\n## Posit Cloud\n\nA web version of RStudio.\n\n[Posit Cloud](https://posit.cloud/login)\n\n## R Packages\n\n-   Tidyverse\n\n-   plotly\n\n-   ggthemes\n\n-   esquisse\n\n-   tidytuesdayR\n\n\n## Load R Package\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(plotly)\nlibrary(ggthemes)\nlibrary(esquisse)\nlibrary(tidytuesdayR)\n```\n:::\n\n\n\n- You must load packages every new R Session\n\n## Visualization Resources\n\n[R Graphics Cookbook](https://r-graphics.org/)\n\n[R Graph Gallery](https://r-graph-gallery.com/)\n\n[R Charts](https://r-charts.com/)\n\n[ggplot2](https://ggplot2.tidyverse.org/)\n\n# Tidy Tuesday\n\n## Tidy Tuesday\n\nTidy Tuesday is a weekly data vizualization challenge from the [R 4 Data Science Online Community](https://github.com/rfordatascience/tidytuesday).\n\n::: fragment\nThe goal is to make learning with real-world data easier.\n:::\n\n::: fragment\nNew data sets are released every week to create awesome visuals.\n:::\n\n## Week 6\n\nThis week looks at the number of heritage sites in 3 countries from the [Unesco World Heritage Convention](https://whc.unesco.org/en/list).\n\n::: fragment\n\nThis is part of the [100 visualizations from 1 data set](https://100.datavizproject.com/).\n\n:::\n\n\n## Loading Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load(2024, week = 6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n#> \tDownloading file 1 of 1: `heritage.csv`\n```\n\n\n:::\n\n```{.r .cell-code}\nheritage <- tuesdata$heritage\nheritage\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 3 Ã— 3\n#>   country `2004` `2022`\n#>   <chr>    <dbl>  <dbl>\n#> 1 Norway       5      8\n#> 2 Denmark      4     10\n#> 3 Sweden      13     15\n```\n\n\n:::\n:::\n\n\n\n## Examples\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nheritage2 <- heritage |> \n  pivot_longer(!country, names_to = \"year\", values_to = \"value\")\nggplot(heritage2, aes(x = year, y = value, color = country)) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](week_1_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n## Examples\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(heritage2, aes(country)) + \n  geom_bar(aes(weight = value, fill = year))\n```\n\n::: {.cell-output-display}\n![](week_1_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n\n\n## Examples\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(ggpie)\nheritage3 <- heritage2 |> uncount(value)\nggrosepie(heritage3, group_key = c(\"country\", \"year\"),\n             count_type = \"full\", label_info = \"all\",\n             show_tick=F,donut_frac=NULL)\n```\n\n::: {.cell-output-display}\n![](week_1_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n## Examples\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# devtools::install_github(\"davidsjoberg/ggsankey\")\nlibrary(ggsankey)\nheritage4 <- heritage3 |> make_long(country, year)\npl <- ggplot(heritage4, aes(x = x,                        \n                     next_x = next_x,                                     \n                     node = node,\n                     next_node = next_node,        \n                     fill = factor(node)))\n                     \npl <- pl +geom_sankey(flow.alpha = 0.5,          #This Creates the transparency of your node \n                      node.color = \"black\",     # This is your node color        \n                      show.legend = TRUE)        # This determines if you want your legend to show\n\npl <- pl + theme_bw()\n\npl\n```\n\n::: {.cell-output-display}\n![](week_1_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n\n\n\n# Graphing Examples\n\n## Downloading Data Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nu <- \"https://www.inqs.info/p/plotathon/owenWilsonWows.csv\"\nbasename(u)\ndownload.file(u,\n              file.path(getwd(), \"data\", basename(u)))\n```\n:::\n\n\n## Loading Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmds <- read_csv(\"data/owenWilsonWows.csv\")\n```\n:::\n\n\n\n## Base Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmds |> ggplot(aes(x = total_wows_in_movie)) \n```\n:::\n\n\n## Histogram\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmds |> ggplot(aes(x = total_wows_in_movie)) +\n  geom_histogram()\n```\n:::\n\n\n## Box Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmds |> ggplot(aes(x = total_wows_in_movie)) +\n  geom_boxplot()\n```\n:::\n\n\n## Density Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmds |> ggplot(aes(x = total_wows_in_movie)) +\n  geom_density()\n```\n:::\n\n\n## Box Plot By Category\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmds |> ggplot(aes(x = total_wows_in_movie, y = era)) +\n  geom_boxplot()\n```\n:::\n\n\n## Density Plot By Category\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmds |> ggplot(aes(x = total_wows_in_movie, color = era)) +\n  geom_density()\n```\n:::\n\n\n## Scatter Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmds |> ggplot(aes(x = durationInSeconds, \n                  y = total_wows_in_movie)) +\n  geom_point()\n```\n:::\n\n\n## Scatter Plot by Group\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmds |> ggplot(aes(x = durationInSeconds, \n                  y = total_wows_in_movie, color = era)) +\n  geom_point()\n```\n:::\n\n\n## Add Regression Line\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmds |> ggplot(aes(x = durationInSeconds, \n                  y = total_wows_in_movie)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = F)\n```\n:::\n\n\n## Smooth Line\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmds |> ggplot(aes(x = durationInSeconds, \n                  y = total_wows_in_movie)) +\n  geom_point() +\n  geom_smooth(se = F)\n```\n:::\n\n\n## Regression Lines by Group\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmds |> ggplot(aes(x = durationInSeconds, \n                  y = total_wows_in_movie,\n                  color = era)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = F)\n```\n:::\n",
    "supporting": [
      "week_1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}